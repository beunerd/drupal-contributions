name: drupal-contributions

recipe: drupal10

config:
  webroot: web

services:
  appserver:
    webroot: web
    xdebug: false
    config:
      php: php.ini
    build_as_root:
      # Note that you will want to use the script for the major version of node you want to install
      # See: https://github.com/nodesource/distributions/blob/master/README.md#installation-instructions
      - apt-get install -y ca-certificates curl gnupg
      - mkdir -p /etc/apt/keyrings
      - curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
      - echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_18.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list
      - apt-get update
      - apt-get install nodejs -y
      - npm install --global yarn
      - rm -f /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && /etc/init.d/apache2 reload
    run:
      - composer self-update
      - if [ ! -d /app/web ] ; then php /app/scripts/get-drupal.php ; fi
      - cd /app/web && composer require drush/drush palantirnet/drupal-rector && composer install
      - mkdir -p private/browsertest_output
      - yarn install --non-interactive --cwd /app/web/core
    overrides:
      environment:
        SIMPLETEST_BASE_URL: "https://drupal-contributions.lndo.site/"
        SIMPLETEST_DB: "sqlite://localhost/tmp/db.sqlite"
        BROWSERTEST_OUTPUT_DIRECTORY: "/app/web/sites/simpletest/browser_output"
        BROWSERTEST_OUTPUT_BASE_URL: "https://drupal-contributions.lndo.site"
        MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"browserName":"chrome","chromeOptions":{"args":["--disable-gpu","--headless", "--no-sandbox"]}}, "http://chrome:9515"]'
        # Nightwatch
        DRUPAL_TEST_BASE_URL: "http://appserver"
        DRUPAL_TEST_DB_URL: "mysql://drupal10:drupal10@database:3306/drupal10"
        DRUPAL_TEST_WEBDRIVER_HOSTNAME: chrome
        DRUPAL_TEST_WEBDRIVER_PORT: 9515
        DRUPAL_TEST_CHROMEDRIVER_AUTOSTART: "false"
        DRUPAL_TEST_WEBDRIVER_CHROME_ARGS: "--disable-gpu --headless --no-sandbox"
        DRUPAL_NIGHTWATCH_OUTPUT: reports/nightwatch
        DRUPAL_NIGHTWATCH_IGNORE_DIRECTORIES: node_modules,vendor,.*,sites/*/files,sites/*/private,sites/simpletest
        XDEBUG_MODE:
  chrome:
    type: compose
    app_mount: false
    services:
      image: drupalci/webdriver-chromedriver:production
      command: chromedriver --log-path=/tmp/chromedriver.log --allowed-origins=* --verbose --whitelisted-ips=

tooling:
  drush:
    service: appserver
    cmd: /app/web/vendor/drush/drush/drush --root=/app/web --uri=https://drupal-contributions.lndo.site

  rector:
    service: appserver
    cmd: /app/web/vendor/bin/rector

  composer:
    service: appserver
    cmd: php -d memory_limit=-1 /usr/local/bin/composer
    dir: /app/web

  node:
    service: appserver

  npm:
    service: appserver

  si:
    service: appserver
    description: Install Drupal
    cmd: /app/scripts/site-install.sh

  patch:
    service: appserver
    description: Get a patch from a Drupal project issue queue
    cmd: php /app/scripts/patch-helpers.php
    options:
      url:
        describe: The url of the patch from the issue queue

  revert:
    service: appserver
    description: Apply a patch from a Drupal project issue queue
    cmd: php /app/scripts/patch-helpers.php --revert
    patch:
      describe: The name of the patch to revert; i.e. DESCRIPTION-XXXXXXX-YY.patch

  create-patch:
    service: appserver
    description: Create a patch from your committed changes on your branch.
    cmd: php /app/scripts/patch-helpers.php --create-patch

  # To run phpunit tests if the lndo.site URL is broken, lando ssh into the instance
  # and run SIMPLETEST_BASE_URL=https://localhost:PORT/ (where "PORT" is the number
  # assigned by docker when starting the container). Then, while still inside
  # the container, run the command below manually.
  # For example: php /app/web/vendor/bin/phpunit -c /app/phpunit.xml --group google_analytics
  phpunit:
    service: appserver
    cmd: php /app/vendor/bin/phpunit -c /app/phpunit.xml
    user: www-data

  phpunitxdebug:
    service: appserver
    cmd: php -d xdebug.remote_port=9003 /app/vendor/bin/phpunit -c /app/phpunit.xml
    user: www-data

  core-check:
    service: appserver
    cmd: php /app/scripts/core-check.php

  nightwatch:
    service: appserver
    description: Run Nightwatch.js
    cmd: yarn test:nightwatch
    dir: /app/web/core

  xdebug-on:
    service: appserver
    description: Enable xdebug for Apache.
    cmd: rm -f /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && docker-php-ext-enable xdebug && /etc/init.d/apache2 reload && echo "Xdebug enabled"
    user: root

  xdebug-off:
    service: appserver
    description: Disable xdebug for Apache.
    cmd: rm -f /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && /etc/init.d/apache2 reload && echo "Xdebug disabled"
    user: root

events:
  post-start:
    - if [ ! -d /app/web ] ; then php scripts/get-drupal.php; fi

  post-destroy:
    - chmod 777 -R /app/web/sites/default
    - echo "Removing web/" && rm -rf /app/web

  pre-rebuild:
    - echo "Removing web/" && rm -rf /app/web
    - appserver: php /app/scripts/get-drupal.php

  post-rebuild:
    - appserver: /app/scripts/rebuild.sh
